// ECサイト用データベース仕様書 (DBML)
// 使用方法: https://dbdiagram.io にペーストしてER図生成
// CLI: npm install -g @dbml/cli && dbml2sql database_spec.dbml

Project ecommerce_db {
  database_type: 'MySQL'
  Note: 'ECサイト用データベース v1.0.0'
}

Table categories {
  id bigint [pk, increment, note: 'カテゴリID']
  name varchar(100) [not null, unique, note: 'カテゴリ名']
  description text [note: 'カテゴリ説明']
  parent_id bigint [ref: > categories.id, note: '親カテゴリID（階層構造用）']
  
  indexes {
    parent_id [name: 'idx_categories_parent']
  }
  
  Note: '商品カテゴリテーブル - 階層構造をサポート'
}

Table users {
  id bigint [pk, increment, note: 'ユーザーID']
  email varchar(255) [not null, unique, note: 'メールアドレス（ログイン用）']
  name varchar(100) [not null, note: 'ユーザー表示名']
  password_hash varchar(255) [not null, note: 'パスワードハッシュ（bcrypt等）']
  created_at timestamp [default: `CURRENT_TIMESTAMP`, note: 'アカウント作成日時']
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`, note: '最終更新日時']
  
  indexes {
    email [unique, name: 'idx_users_email']
    created_at [name: 'idx_users_created_at']
  }
  
  Note: 'ユーザー情報テーブル - 認証とプロフィール情報'
}

Table products {
  id bigint [pk, increment, note: '商品ID']
  name varchar(200) [not null, note: '商品名']
  price decimal(10,2) [not null, note: '価格（税込み）']
  description text [note: '商品の詳細説明']
  stock_quantity int [default: 0, note: '在庫数']
  category_id bigint [not null, ref: > categories.id, note: 'カテゴリID']
  created_at timestamp [default: `CURRENT_TIMESTAMP`, note: '商品登録日時']
  
  indexes {
    category_id [name: 'idx_products_category']
    price [name: 'idx_products_price']
    stock_quantity [name: 'idx_products_stock']
  }
  
  Note: '商品情報テーブル - 商品の基本情報と在庫管理'
}

// 関係性の定義（テーブル定義内のrefで既に定義済みのためコメントアウト）
// Ref: categories.parent_id > categories.id [delete: set null, update: cascade]
// Ref: products.category_id > categories.id [delete: restrict, update: cascade]

// 将来の拡張用テーブル（コメントアウト）
/*
Table orders {
  id bigint [pk, increment]
  user_id bigint [not null, ref: > users.id]
  total_amount decimal(10,2) [not null]
  status enum('pending', 'confirmed', 'shipped', 'delivered', 'cancelled') [default: 'pending']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table order_items {
  id bigint [pk, increment]
  order_id bigint [not null, ref: > orders.id]
  product_id bigint [not null, ref: > products.id]
  quantity int [not null]
  unit_price decimal(10,2) [not null]
}
*/